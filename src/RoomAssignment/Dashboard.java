/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RoomAssignment;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.RoundRectangle2D;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.Timer;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author solve
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    private int mouseX, mouseY;
    Account_Queries userData = new Account_Queries();
    Account_Validator userValidation = new Account_Validator();
    Room_Queries roomData = new Room_Queries();
    Room_Validator roomValidation = new Room_Validator();
    ResultSet tblData;
    DefaultTableModel tblModel;
    Vector<Object> tblRowData;
    Timer clearErrorTimer;

    public Dashboard() {
        initComponents();
        DefaultTab();
        populateUserJTable();
        populateRoomJTable();
        populateTeacherJComboBox();
        //Rounded Corner
        setShape(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 20, 20));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpRAMStartTime = new com.raven.swing.TimePicker();
        tpRAMEndTime = new com.raven.swing.TimePicker();
        pnlTabTop = new javax.swing.JPanel();
        lblMinimize = new javax.swing.JLabel();
        pnlTabLeft = new javax.swing.JPanel();
        pnlTabHome = new javax.swing.JPanel();
        lblHome = new javax.swing.JLabel();
        pnlTabRoomManagement = new javax.swing.JPanel();
        lblTabRoomManagement = new javax.swing.JLabel();
        pnlTabMembers = new javax.swing.JPanel();
        lblTabMembers = new javax.swing.JLabel();
        pnlTabAccount = new javax.swing.JPanel();
        lblTabAccount = new javax.swing.JLabel();
        lblImageOnTop = new javax.swing.JLabel();
        lblRoomMangementSystem = new javax.swing.JLabel();
        pnlTabRight = new javax.swing.JPanel();
        pnlHome = new javax.swing.JPanel();
        pnlHomeCreatedSchedule = new javax.swing.JPanel();
        lblHomeCreatedSchedule = new javax.swing.JLabel();
        lblHomeScheduleNumber = new javax.swing.JLabel();
        pnlHomeCreatedAccount = new javax.swing.JPanel();
        lblHomeCreatedAccount = new javax.swing.JLabel();
        lblHomeAccountNumber = new javax.swing.JLabel();
        pnlHomeFacultiesStudents = new javax.swing.JPanel();
        lblHomeFaculties = new javax.swing.JLabel();
        lblHomeFacultiesNumber = new javax.swing.JLabel();
        pnlHomeActivityLog = new javax.swing.JPanel();
        spActivityLog = new javax.swing.JScrollPane();
        listActivityLog = new javax.swing.JList<>();
        pnlRoomManagement = new javax.swing.JPanel();
        lblRAMRoomManagement = new javax.swing.JLabel();
        pnlRAMSchedule = new javax.swing.JPanel();
        spRAMShowRoom = new javax.swing.JScrollPane();
        tblRAMShowRoom = new javax.swing.JTable();
        lblRAMID = new javax.swing.JLabel();
        lblRAMSubject = new javax.swing.JLabel();
        lblRAMSection = new javax.swing.JLabel();
        lblRAMDayOfTheWeek = new javax.swing.JLabel();
        lblRAMStartTime = new javax.swing.JLabel();
        lblRAMEndTime = new javax.swing.JLabel();
        txtRAMID = new javax.swing.JTextField();
        txtRAMSubject = new javax.swing.JTextField();
        txtRAMSection = new javax.swing.JTextField();
        btnRAMSave = new javax.swing.JButton();
        btnRAMAdd = new javax.swing.JButton();
        txtRAMStartTime = new javax.swing.JTextField();
        txtRAMEndTime = new javax.swing.JTextField();
        btnRAMStartTime = new javax.swing.JButton();
        btnRAMEndTime = new javax.swing.JButton();
        lblRAMError = new javax.swing.JLabel();
        btnRAMDeleteRoom = new javax.swing.JButton();
        lblRAMRoom = new javax.swing.JLabel();
        txtRAMRoom = new javax.swing.JTextField();
        cbRAMDayOfTheWeek = new javax.swing.JComboBox<>();
        lblRAMTeacher = new javax.swing.JLabel();
        btnRAMEdit = new javax.swing.JButton();
        txtRAMSearch = new javax.swing.JTextField();
        btnRAMSearch = new javax.swing.JButton();
        btnRAMViewAll = new javax.swing.JButton();
        cbRAMTeacher = new javax.swing.JComboBox<>();
        pnlMembers = new javax.swing.JPanel();
        lblMMember = new javax.swing.JLabel();
        pnlMViewUser = new javax.swing.JPanel();
        lblMUserFirstName = new javax.swing.JLabel();
        lblMUserLastName = new javax.swing.JLabel();
        lblMUserPassword = new javax.swing.JLabel();
        txtMUserID = new javax.swing.JTextField();
        btnMUserSave = new javax.swing.JButton();
        txtMUserUsername = new javax.swing.JTextField();
        txtMUserFirstName = new javax.swing.JTextField();
        txtMUserLastName = new javax.swing.JTextField();
        btnMUserAdd = new javax.swing.JButton();
        spMUser = new javax.swing.JScrollPane();
        tblMHead = new javax.swing.JTable();
        pfMUserPassword = new javax.swing.JPasswordField();
        lblMUserID = new javax.swing.JLabel();
        cbMUserShowPassword = new javax.swing.JCheckBox();
        lblMUserUsername = new javax.swing.JLabel();
        lblMUserDepartment = new javax.swing.JLabel();
        txtMUserDepartment = new javax.swing.JTextField();
        lblMUserError = new javax.swing.JLabel();
        btnMUserDelete = new javax.swing.JButton();
        lblMUserRole = new javax.swing.JLabel();
        cbMUserRole = new javax.swing.JComboBox<>();
        lblMUserMiddleName = new javax.swing.JLabel();
        txtMUserMiddleName = new javax.swing.JTextField();
        lblMUserEmail = new javax.swing.JLabel();
        txtMUserEmail = new javax.swing.JTextField();
        lblMUserContactNo = new javax.swing.JLabel();
        txtMUserContactNo = new javax.swing.JTextField();
        lblMUserAddress = new javax.swing.JLabel();
        btnMUserEdit = new javax.swing.JButton();
        txtMUserSearch = new javax.swing.JTextField();
        btnMUserSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMUserAddress = new javax.swing.JTextArea();
        btnMUserViewAll = new javax.swing.JButton();
        pnlAccount = new javax.swing.JPanel();
        lblRAMRoomManagement1 = new javax.swing.JLabel();
        pnlAInformation = new javax.swing.JPanel();
        labelAID = new javax.swing.JLabel();
        labelAUsername = new javax.swing.JLabel();
        labelAFirstName = new javax.swing.JLabel();
        labelALastName = new javax.swing.JLabel();
        labelADepartment = new javax.swing.JLabel();
        btnALogout = new javax.swing.JButton();
        btnAChangePassword = new javax.swing.JButton();
        lblAID = new javax.swing.JLabel();
        lbAlUsername = new javax.swing.JLabel();
        lblAFirstname = new javax.swing.JLabel();
        lblALastname = new javax.swing.JLabel();
        lblADepartment = new javax.swing.JLabel();

        tpRAMStartTime.setForeground(new java.awt.Color(218, 104, 70));
        tpRAMStartTime.setDisplayText(txtRAMStartTime);
        tpRAMStartTime.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N

        tpRAMEndTime.setForeground(new java.awt.Color(218, 104, 70));
        tpRAMEndTime.setDisplayText(txtRAMEndTime);
        tpRAMEndTime.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        tpRAMEndTime.setName(""); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        setMaximumSize(new java.awt.Dimension(1290, 726));
        setMinimumSize(new java.awt.Dimension(1290, 726));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setName("Dashboard"); // NOI18N
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1290, 726));
        setResizable(false);

        pnlTabTop.setBackground(new java.awt.Color(153, 153, 153));
        pnlTabTop.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlTabTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlTabTopMouseDragged(evt);
            }
        });
        pnlTabTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlTabTopMousePressed(evt);
            }
        });

        lblMinimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/minimize.png"))); // NOI18N
        lblMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlTabTopLayout = new javax.swing.GroupLayout(pnlTabTop);
        pnlTabTop.setLayout(pnlTabTopLayout);
        pnlTabTopLayout.setHorizontalGroup(
            pnlTabTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTabTopLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMinimize)
                .addContainerGap())
        );
        pnlTabTopLayout.setVerticalGroup(
            pnlTabTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTabTopLayout.createSequentialGroup()
                .addComponent(lblMinimize)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlTabLeft.setBackground(new java.awt.Color(251, 251, 251));

        pnlTabHome.setBackground(new java.awt.Color(218, 104, 70));
        pnlTabHome.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTabHome.setPreferredSize(new java.awt.Dimension(105, 55));
        pnlTabHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlTabHomeMouseClicked(evt);
            }
        });

        lblHome.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblHome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/home.png"))); // NOI18N
        lblHome.setText("Home");

        javax.swing.GroupLayout pnlTabHomeLayout = new javax.swing.GroupLayout(pnlTabHome);
        pnlTabHome.setLayout(pnlTabHomeLayout);
        pnlTabHomeLayout.setHorizontalGroup(
            pnlTabHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTabHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTabHomeLayout.setVerticalGroup(
            pnlTabHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHome, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlTabRoomManagement.setBackground(new java.awt.Color(218, 104, 70));
        pnlTabRoomManagement.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTabRoomManagement.setPreferredSize(new java.awt.Dimension(105, 55));
        pnlTabRoomManagement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlTabRoomManagementMouseClicked(evt);
            }
        });

        lblTabRoomManagement.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblTabRoomManagement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTabRoomManagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/lecture.png"))); // NOI18N
        lblTabRoomManagement.setText("Room Management");

        javax.swing.GroupLayout pnlTabRoomManagementLayout = new javax.swing.GroupLayout(pnlTabRoomManagement);
        pnlTabRoomManagement.setLayout(pnlTabRoomManagementLayout);
        pnlTabRoomManagementLayout.setHorizontalGroup(
            pnlTabRoomManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabRoomManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTabRoomManagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTabRoomManagementLayout.setVerticalGroup(
            pnlTabRoomManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabRoomManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTabRoomManagement, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlTabMembers.setBackground(new java.awt.Color(218, 104, 70));
        pnlTabMembers.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTabMembers.setPreferredSize(new java.awt.Dimension(105, 55));
        pnlTabMembers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlTabMembersMouseClicked(evt);
            }
        });

        lblTabMembers.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblTabMembers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTabMembers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/group.png"))); // NOI18N
        lblTabMembers.setText("Members");

        javax.swing.GroupLayout pnlTabMembersLayout = new javax.swing.GroupLayout(pnlTabMembers);
        pnlTabMembers.setLayout(pnlTabMembersLayout);
        pnlTabMembersLayout.setHorizontalGroup(
            pnlTabMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabMembersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTabMembers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTabMembersLayout.setVerticalGroup(
            pnlTabMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabMembersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTabMembers, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlTabAccount.setBackground(new java.awt.Color(218, 104, 70));
        pnlTabAccount.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTabAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlTabAccountMouseClicked(evt);
            }
        });

        lblTabAccount.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblTabAccount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTabAccount.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/user.png"))); // NOI18N
        lblTabAccount.setText("Account");

        javax.swing.GroupLayout pnlTabAccountLayout = new javax.swing.GroupLayout(pnlTabAccount);
        pnlTabAccount.setLayout(pnlTabAccountLayout);
        pnlTabAccountLayout.setHorizontalGroup(
            pnlTabAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTabAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTabAccountLayout.setVerticalGroup(
            pnlTabAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTabAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTabAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblImageOnTop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/undraw_Launching.png"))); // NOI18N

        lblRoomMangementSystem.setFont(new java.awt.Font("Copperplate Gothic Bold", 2, 12)); // NOI18N
        lblRoomMangementSystem.setText("Room Management System");

        javax.swing.GroupLayout pnlTabLeftLayout = new javax.swing.GroupLayout(pnlTabLeft);
        pnlTabLeft.setLayout(pnlTabLeftLayout);
        pnlTabLeftLayout.setHorizontalGroup(
            pnlTabLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTabHome, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
            .addComponent(pnlTabRoomManagement, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
            .addComponent(pnlTabMembers, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
            .addComponent(pnlTabAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTabLeftLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblImageOnTop)
                .addGap(61, 61, 61))
            .addGroup(pnlTabLeftLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblRoomMangementSystem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTabLeftLayout.setVerticalGroup(
            pnlTabLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTabLeftLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblImageOnTop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRoomMangementSystem)
                .addGap(134, 134, 134)
                .addComponent(pnlTabHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTabRoomManagement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTabMembers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTabAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTabRight.setBackground(new java.awt.Color(204, 204, 204));
        pnlTabRight.setMaximumSize(new java.awt.Dimension(1058, 622));
        pnlTabRight.setMinimumSize(new java.awt.Dimension(1058, 622));
        pnlTabRight.setPreferredSize(new java.awt.Dimension(1058, 622));

        pnlHome.setBackground(new java.awt.Color(204, 204, 204));
        pnlHome.setMaximumSize(new java.awt.Dimension(1058, 622));
        pnlHome.setMinimumSize(new java.awt.Dimension(1058, 622));
        pnlHome.setPreferredSize(new java.awt.Dimension(1058, 622));

        pnlHomeCreatedSchedule.setBackground(java.awt.Color.darkGray);

        lblHomeCreatedSchedule.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblHomeCreatedSchedule.setForeground(java.awt.Color.white);
        lblHomeCreatedSchedule.setText("Created Schedules");

        lblHomeScheduleNumber.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        lblHomeScheduleNumber.setForeground(java.awt.Color.white);
        lblHomeScheduleNumber.setText("00");

        javax.swing.GroupLayout pnlHomeCreatedScheduleLayout = new javax.swing.GroupLayout(pnlHomeCreatedSchedule);
        pnlHomeCreatedSchedule.setLayout(pnlHomeCreatedScheduleLayout);
        pnlHomeCreatedScheduleLayout.setHorizontalGroup(
            pnlHomeCreatedScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeCreatedScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHomeCreatedScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHomeScheduleNumber)
                    .addComponent(lblHomeCreatedSchedule))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHomeCreatedScheduleLayout.setVerticalGroup(
            pnlHomeCreatedScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeCreatedScheduleLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblHomeScheduleNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHomeCreatedSchedule)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlHomeCreatedAccount.setBackground(java.awt.Color.darkGray);

        lblHomeCreatedAccount.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblHomeCreatedAccount.setForeground(java.awt.Color.white);
        lblHomeCreatedAccount.setText("Created Accounts");

        lblHomeAccountNumber.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        lblHomeAccountNumber.setForeground(java.awt.Color.white);
        lblHomeAccountNumber.setText("00");

        javax.swing.GroupLayout pnlHomeCreatedAccountLayout = new javax.swing.GroupLayout(pnlHomeCreatedAccount);
        pnlHomeCreatedAccount.setLayout(pnlHomeCreatedAccountLayout);
        pnlHomeCreatedAccountLayout.setHorizontalGroup(
            pnlHomeCreatedAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeCreatedAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHomeCreatedAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHomeAccountNumber)
                    .addComponent(lblHomeCreatedAccount))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        pnlHomeCreatedAccountLayout.setVerticalGroup(
            pnlHomeCreatedAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeCreatedAccountLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblHomeAccountNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHomeCreatedAccount)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlHomeFacultiesStudents.setBackground(java.awt.Color.darkGray);

        lblHomeFaculties.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        lblHomeFaculties.setForeground(java.awt.Color.white);
        lblHomeFaculties.setText("Faculties");

        lblHomeFacultiesNumber.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        lblHomeFacultiesNumber.setForeground(java.awt.Color.white);
        lblHomeFacultiesNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHomeFacultiesNumber.setText("00");

        javax.swing.GroupLayout pnlHomeFacultiesStudentsLayout = new javax.swing.GroupLayout(pnlHomeFacultiesStudents);
        pnlHomeFacultiesStudents.setLayout(pnlHomeFacultiesStudentsLayout);
        pnlHomeFacultiesStudentsLayout.setHorizontalGroup(
            pnlHomeFacultiesStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeFacultiesStudentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHomeFacultiesStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHomeFaculties)
                    .addComponent(lblHomeFacultiesNumber))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        pnlHomeFacultiesStudentsLayout.setVerticalGroup(
            pnlHomeFacultiesStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeFacultiesStudentsLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lblHomeFacultiesNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHomeFaculties)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pnlHomeActivityLog.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Activity Log", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Century Gothic", 1, 18))); // NOI18N

        listActivityLog.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        listActivityLog.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "This User Delete ID: 000", "This User Edit ID: 000", "This User Create ID: 000", "This User Delete ID: 000", "This User Delete ID: 000", "This User Delete ID: 000", "This User Create ID: 000", "This User Delete ID: 000", "This User Edit ID: 000", "This User Delete ID: 000", "This User Create ID: 000", "This User Delete ID: 000", "This User Create ID: 000", "This User Edit ID: 000", "This User Delete ID: 000", "This User Edit ID: 000" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        spActivityLog.setViewportView(listActivityLog);

        javax.swing.GroupLayout pnlHomeActivityLogLayout = new javax.swing.GroupLayout(pnlHomeActivityLog);
        pnlHomeActivityLog.setLayout(pnlHomeActivityLogLayout);
        pnlHomeActivityLogLayout.setHorizontalGroup(
            pnlHomeActivityLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeActivityLogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spActivityLog)
                .addContainerGap())
        );
        pnlHomeActivityLogLayout.setVerticalGroup(
            pnlHomeActivityLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeActivityLogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spActivityLog, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHomeLayout.createSequentialGroup()
                        .addComponent(pnlHomeActivityLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlHomeLayout.createSequentialGroup()
                        .addComponent(pnlHomeFacultiesStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(pnlHomeCreatedSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlHomeCreatedAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 183, Short.MAX_VALUE))))
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlHomeCreatedAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlHomeCreatedSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlHomeFacultiesStudents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlHomeActivityLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pnlRoomManagement.setBackground(new java.awt.Color(204, 204, 204));
        pnlRoomManagement.setMaximumSize(new java.awt.Dimension(1058, 622));
        pnlRoomManagement.setMinimumSize(new java.awt.Dimension(1058, 622));
        pnlRoomManagement.setPreferredSize(new java.awt.Dimension(1058, 622));

        lblRAMRoomManagement.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblRAMRoomManagement.setText("Room Assignment & Management");

        pnlRAMSchedule.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Schedule", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Century Gothic", 3, 14))); // NOI18N

        tblRAMShowRoom.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tblRAMShowRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Schedule ID", "Room", "Subject", "Section", "Teacher", "Day of the Week", "Start Time", "End Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spRAMShowRoom.setViewportView(tblRAMShowRoom);

        lblRAMID.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblRAMID.setText("Schedule ID");

        lblRAMSubject.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblRAMSubject.setText("Subject");

        lblRAMSection.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblRAMSection.setText("Section");

        lblRAMDayOfTheWeek.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblRAMDayOfTheWeek.setText("Day of the Week");

        lblRAMStartTime.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblRAMStartTime.setText("Start Time");

        lblRAMEndTime.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblRAMEndTime.setText("End Time");

        txtRAMID.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRAMID.setToolTipText("ScheduleID only allows updating and deleting of information.");
        txtRAMID.setEnabled(false);

        txtRAMSubject.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRAMSubject.setEnabled(false);

        txtRAMSection.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRAMSection.setEnabled(false);

        btnRAMSave.setBackground(new java.awt.Color(218, 104, 70));
        btnRAMSave.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRAMSave.setText("Save");
        btnRAMSave.setToolTipText("Update the information of room.");
        btnRAMSave.setBorder(null);
        btnRAMSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRAMSaveActionPerformed(evt);
            }
        });

        btnRAMAdd.setBackground(new java.awt.Color(218, 104, 70));
        btnRAMAdd.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRAMAdd.setText("Add");
        btnRAMAdd.setToolTipText("Add Room information.");
        btnRAMAdd.setBorder(null);
        btnRAMAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRAMAddActionPerformed(evt);
            }
        });

        txtRAMStartTime.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRAMStartTime.setEnabled(false);
        txtRAMStartTime.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtRAMStartTimeInputMethodTextChanged(evt);
            }
        });

        txtRAMEndTime.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRAMEndTime.setEnabled(false);

        btnRAMStartTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/clock.png"))); // NOI18N
        btnRAMStartTime.setBorder(null);
        btnRAMStartTime.setEnabled(false);
        btnRAMStartTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRAMStartTimeActionPerformed(evt);
            }
        });

        btnRAMEndTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/clock.png"))); // NOI18N
        btnRAMEndTime.setBorder(null);
        btnRAMEndTime.setEnabled(false);
        btnRAMEndTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRAMEndTimeActionPerformed(evt);
            }
        });

        lblRAMError.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblRAMError.setForeground(java.awt.Color.red);
        lblRAMError.setText("[error appear here]");

        btnRAMDeleteRoom.setBackground(new java.awt.Color(204, 0, 0));
        btnRAMDeleteRoom.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRAMDeleteRoom.setForeground(java.awt.Color.white);
        btnRAMDeleteRoom.setText("Delete");
        btnRAMDeleteRoom.setToolTipText("Delete room information.");
        btnRAMDeleteRoom.setBorder(null);
        btnRAMDeleteRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRAMDeleteRoomActionPerformed(evt);
            }
        });

        lblRAMRoom.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblRAMRoom.setText("Room");

        txtRAMRoom.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRAMRoom.setEnabled(false);
        txtRAMRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRAMRoomActionPerformed(evt);
            }
        });

        cbRAMDayOfTheWeek.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbRAMDayOfTheWeek.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));
        cbRAMDayOfTheWeek.setEnabled(false);

        lblRAMTeacher.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblRAMTeacher.setText("Teacher");

        btnRAMEdit.setBackground(new java.awt.Color(218, 104, 70));
        btnRAMEdit.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRAMEdit.setForeground(new java.awt.Color(51, 51, 51));
        btnRAMEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/lock.png"))); // NOI18N
        btnRAMEdit.setText("Edit");
        btnRAMEdit.setToolTipText("Edit room information.");
        btnRAMEdit.setBorder(null);
        btnRAMEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRAMEditActionPerformed(evt);
            }
        });

        txtRAMSearch.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtRAMSearch.setToolTipText("type specific information.");
        txtRAMSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRAMSearchActionPerformed(evt);
            }
        });

        btnRAMSearch.setBackground(new java.awt.Color(218, 104, 70));
        btnRAMSearch.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRAMSearch.setForeground(new java.awt.Color(51, 51, 51));
        btnRAMSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/search.png"))); // NOI18N
        btnRAMSearch.setText("Search");
        btnRAMSearch.setToolTipText("Search specific information on table.");
        btnRAMSearch.setBorder(null);
        btnRAMSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRAMSearchActionPerformed(evt);
            }
        });

        btnRAMViewAll.setBackground(new java.awt.Color(218, 104, 70));
        btnRAMViewAll.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRAMViewAll.setText("View All");
        btnRAMViewAll.setToolTipText("Update the information of room.");
        btnRAMViewAll.setBorder(null);
        btnRAMViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRAMViewAllActionPerformed(evt);
            }
        });

        cbRAMTeacher.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbRAMTeacher.setEnabled(false);

        javax.swing.GroupLayout pnlRAMScheduleLayout = new javax.swing.GroupLayout(pnlRAMSchedule);
        pnlRAMSchedule.setLayout(pnlRAMScheduleLayout);
        pnlRAMScheduleLayout.setHorizontalGroup(
            pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRAMError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                        .addComponent(lblRAMRoom)
                                        .addGap(40, 40, 40)
                                        .addComponent(txtRAMRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                        .addComponent(lblRAMSubject)
                                        .addGap(31, 31, 31)
                                        .addComponent(txtRAMSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                        .addComponent(lblRAMSection)
                                        .addGap(31, 31, 31)
                                        .addComponent(txtRAMSection, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRAMTeacher)
                                    .addComponent(lblRAMDayOfTheWeek)
                                    .addComponent(lblRAMStartTime)
                                    .addComponent(lblRAMEndTime))
                                .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtRAMEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addComponent(txtRAMStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(6, 6, 6)
                                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnRAMEndTime)
                                            .addComponent(btnRAMStartTime)))
                                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(cbRAMTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                .addGap(391, 391, 391)
                                .addComponent(cbRAMDayOfTheWeek, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                        .addComponent(btnRAMAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRAMEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                        .addComponent(txtRAMSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRAMSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRAMViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147)
                        .addComponent(lblRAMID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRAMID, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRAMSave, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRAMDeleteRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                    .addComponent(spRAMShowRoom))
                .addContainerGap())
        );
        pnlRAMScheduleLayout.setVerticalGroup(
            pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRAMTeacher)
                            .addComponent(cbRAMTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbRAMDayOfTheWeek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblRAMDayOfTheWeek)))
                        .addGap(6, 6, 6)
                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRAMStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRAMStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblRAMStartTime)))
                        .addGap(6, 6, 6)
                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRAMEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRAMEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblRAMEndTime))))
                    .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRAMRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblRAMRoom)))
                        .addGap(6, 6, 6)
                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRAMSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblRAMSubject)))
                        .addGap(6, 6, 6)
                        .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRAMSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRAMScheduleLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblRAMSection)))))
                .addGap(12, 12, 12)
                .addComponent(lblRAMError, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRAMAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRAMEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlRAMScheduleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnRAMSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                        .addComponent(btnRAMViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtRAMID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblRAMID)
                        .addComponent(btnRAMSave, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRAMDeleteRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtRAMSearch, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(spRAMShowRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlRoomManagementLayout = new javax.swing.GroupLayout(pnlRoomManagement);
        pnlRoomManagement.setLayout(pnlRoomManagementLayout);
        pnlRoomManagementLayout.setHorizontalGroup(
            pnlRoomManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRoomManagementLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblRAMRoomManagement)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlRoomManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlRAMSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlRoomManagementLayout.setVerticalGroup(
            pnlRoomManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRoomManagementLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblRAMRoomManagement)
                .addGap(11, 11, 11)
                .addComponent(pnlRAMSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlMembers.setBackground(new java.awt.Color(204, 204, 204));
        pnlMembers.setMaximumSize(new java.awt.Dimension(1058, 622));
        pnlMembers.setMinimumSize(new java.awt.Dimension(1058, 622));
        pnlMembers.setPreferredSize(new java.awt.Dimension(1058, 622));

        lblMMember.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblMMember.setText("Members");

        pnlMViewUser.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Century Gothic", 3, 14))); // NOI18N
        pnlMViewUser.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N

        lblMUserFirstName.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserFirstName.setText("First Name");

        lblMUserLastName.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserLastName.setText("Last Name");

        lblMUserPassword.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserPassword.setText("Password");

        txtMUserID.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtMUserID.setToolTipText("UserID only allows updating and deleting of information.");
        txtMUserID.setEnabled(false);

        btnMUserSave.setBackground(new java.awt.Color(218, 104, 70));
        btnMUserSave.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnMUserSave.setForeground(new java.awt.Color(51, 51, 51));
        btnMUserSave.setText("Save");
        btnMUserSave.setToolTipText("Update the member information.");
        btnMUserSave.setBorder(null);
        btnMUserSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMUserSaveActionPerformed(evt);
            }
        });

        txtMUserUsername.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtMUserUsername.setEnabled(false);

        txtMUserFirstName.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtMUserFirstName.setEnabled(false);

        txtMUserLastName.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtMUserLastName.setEnabled(false);

        btnMUserAdd.setBackground(new java.awt.Color(218, 104, 70));
        btnMUserAdd.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnMUserAdd.setForeground(new java.awt.Color(51, 51, 51));
        btnMUserAdd.setText("Add");
        btnMUserAdd.setToolTipText("Add new member information.");
        btnMUserAdd.setBorder(null);
        btnMUserAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMUserAddActionPerformed(evt);
            }
        });

        tblMHead.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tblMHead.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "User ID", "Username", "Password", "Department", "Roles", "First Name", "Last Name", "Middle Name", "Email", "Contact No.", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMHead.setOpaque(false);
        tblMHead.setRequestFocusEnabled(false);
        spMUser.setViewportView(tblMHead);

        pfMUserPassword.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        pfMUserPassword.setText("jPasswordField1");
        pfMUserPassword.setEnabled(false);

        lblMUserID.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserID.setText("User ID");

        cbMUserShowPassword.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cbMUserShowPassword.setText("Show Password");
        cbMUserShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMUserShowPasswordActionPerformed(evt);
            }
        });

        lblMUserUsername.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserUsername.setText("Username");

        lblMUserDepartment.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserDepartment.setText("Department");

        txtMUserDepartment.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtMUserDepartment.setEnabled(false);

        lblMUserError.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblMUserError.setForeground(java.awt.Color.red);
        lblMUserError.setText("[error appear here]");

        btnMUserDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnMUserDelete.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnMUserDelete.setForeground(java.awt.Color.white);
        btnMUserDelete.setText("Delete");
        btnMUserDelete.setToolTipText("Delete member information.");
        btnMUserDelete.setBorder(null);
        btnMUserDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMUserDeleteActionPerformed(evt);
            }
        });

        lblMUserRole.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserRole.setText("Role");

        cbMUserRole.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        cbMUserRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teacher", "Program Head", "Administrator" }));
        cbMUserRole.setEnabled(false);

        lblMUserMiddleName.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserMiddleName.setText("Middle Name");

        txtMUserMiddleName.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtMUserMiddleName.setEnabled(false);
        txtMUserMiddleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMUserMiddleNameActionPerformed(evt);
            }
        });

        lblMUserEmail.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserEmail.setText("Email");

        txtMUserEmail.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtMUserEmail.setEnabled(false);

        lblMUserContactNo.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserContactNo.setText("Contact No.");

        txtMUserContactNo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtMUserContactNo.setEnabled(false);

        lblMUserAddress.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lblMUserAddress.setText("Address");

        btnMUserEdit.setBackground(new java.awt.Color(218, 104, 70));
        btnMUserEdit.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnMUserEdit.setForeground(new java.awt.Color(51, 51, 51));
        btnMUserEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/lock.png"))); // NOI18N
        btnMUserEdit.setText("Edit");
        btnMUserEdit.setToolTipText("Ediit information on textfield.");
        btnMUserEdit.setBorder(null);
        btnMUserEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMUserEditActionPerformed(evt);
            }
        });

        txtMUserSearch.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtMUserSearch.setToolTipText("type specific information.");
        txtMUserSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMUserSearchActionPerformed(evt);
            }
        });

        btnMUserSearch.setBackground(new java.awt.Color(218, 104, 70));
        btnMUserSearch.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnMUserSearch.setForeground(new java.awt.Color(51, 51, 51));
        btnMUserSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/RoomAssignment/image/search.png"))); // NOI18N
        btnMUserSearch.setText("Search");
        btnMUserSearch.setToolTipText("Search specific information on table.");
        btnMUserSearch.setBorder(null);
        btnMUserSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMUserSearchActionPerformed(evt);
            }
        });

        txtMUserAddress.setColumns(20);
        txtMUserAddress.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        txtMUserAddress.setLineWrap(true);
        txtMUserAddress.setRows(5);
        txtMUserAddress.setEnabled(false);
        jScrollPane1.setViewportView(txtMUserAddress);

        btnMUserViewAll.setBackground(new java.awt.Color(218, 104, 70));
        btnMUserViewAll.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnMUserViewAll.setText("View All");
        btnMUserViewAll.setToolTipText("Update the information of room.");
        btnMUserViewAll.setBorder(null);
        btnMUserViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMUserViewAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMViewUserLayout = new javax.swing.GroupLayout(pnlMViewUser);
        pnlMViewUser.setLayout(pnlMViewUserLayout);
        pnlMViewUserLayout.setHorizontalGroup(
            pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMViewUserLayout.createSequentialGroup()
                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spMUser, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlMViewUserLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnMUserAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnMUserEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlMViewUserLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMUserUsername)
                            .addComponent(lblMUserPassword)
                            .addComponent(lblMUserDepartment)
                            .addComponent(lblMUserRole))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMUserUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pfMUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMUserDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMUserRole, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMUserShowPassword))
                        .addGap(41, 41, 41)
                        .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMUserFirstName)
                            .addComponent(lblMUserLastName)
                            .addComponent(lblMUserMiddleName)
                            .addComponent(lblMUserEmail)
                            .addComponent(lblMUserContactNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMUserContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMUserLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMUserFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMUserMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblMUserAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMViewUserLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblMUserError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlMViewUserLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtMUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnMUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMUserViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMUserID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMUserSave, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMUserDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlMViewUserLayout.setVerticalGroup(
            pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMViewUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlMViewUserLayout.createSequentialGroup()
                        .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMViewUserLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMUserFirstName)
                                    .addComponent(txtMUserUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMUserUsername)))
                            .addComponent(txtMUserFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMViewUserLayout.createSequentialGroup()
                                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMViewUserLayout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(lblMUserLastName)
                                        .addGap(11, 11, 11)
                                        .addComponent(lblMUserMiddleName))
                                    .addGroup(pnlMViewUserLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(txtMUserLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(5, 5, 5)
                                        .addComponent(txtMUserMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMViewUserLayout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(lblMUserEmail))
                                    .addComponent(txtMUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMViewUserLayout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(lblMUserContactNo))
                                    .addGroup(pnlMViewUserLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(txtMUserContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnlMViewUserLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pfMUserPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMUserPassword))
                                .addGap(1, 1, 1)
                                .addComponent(cbMUserShowPassword)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMUserDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMUserDepartment))
                                .addGap(4, 4, 4)
                                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbMUserRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMUserRole)))))
                    .addComponent(lblMUserAddress, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblMUserError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMUserAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMUserEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMUserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMUserViewAll, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMUserDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMUserSave, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMViewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblMUserID)))
                .addGap(18, 18, 18)
                .addComponent(spMUser, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlMembersLayout = new javax.swing.GroupLayout(pnlMembers);
        pnlMembers.setLayout(pnlMembersLayout);
        pnlMembersLayout.setHorizontalGroup(
            pnlMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMembersLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblMMember)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMembersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMViewUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlMembersLayout.setVerticalGroup(
            pnlMembersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMembersLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblMMember, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlMViewUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlAccount.setBackground(new java.awt.Color(204, 204, 204));
        pnlAccount.setMaximumSize(new java.awt.Dimension(1058, 622));
        pnlAccount.setMinimumSize(new java.awt.Dimension(1058, 622));
        pnlAccount.setPreferredSize(new java.awt.Dimension(1058, 622));

        lblRAMRoomManagement1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lblRAMRoomManagement1.setText("Account");

        pnlAInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Account Information", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Century Gothic", 1, 12))); // NOI18N

        labelAID.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        labelAID.setText("ID");

        labelAUsername.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        labelAUsername.setText("Username");

        labelAFirstName.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        labelAFirstName.setText("First Name");

        labelALastName.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        labelALastName.setText("Last Name");

        labelADepartment.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        labelADepartment.setText("Department");

        btnALogout.setBackground(new java.awt.Color(218, 104, 70));
        btnALogout.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnALogout.setForeground(new java.awt.Color(51, 51, 51));
        btnALogout.setText("Logout?");
        btnALogout.setBorder(null);
        btnALogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnALogoutActionPerformed(evt);
            }
        });

        btnAChangePassword.setBackground(new java.awt.Color(218, 104, 70));
        btnAChangePassword.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnAChangePassword.setForeground(new java.awt.Color(51, 51, 51));
        btnAChangePassword.setText("Change Password?");
        btnAChangePassword.setBorder(null);
        btnAChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAChangePasswordActionPerformed(evt);
            }
        });

        lblAID.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblAID.setText("Sample ID");
        lblAID.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lbAlUsername.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lbAlUsername.setText("Sample Username");
        lbAlUsername.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblAFirstname.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblAFirstname.setText("Sample First Name");
        lblAFirstname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblALastname.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblALastname.setText("Sample Last Name");
        lblALastname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        lblADepartment.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        lblADepartment.setText("Sample Department");
        lblADepartment.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlAInformationLayout = new javax.swing.GroupLayout(pnlAInformation);
        pnlAInformation.setLayout(pnlAInformationLayout);
        pnlAInformationLayout.setHorizontalGroup(
            pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAInformationLayout.createSequentialGroup()
                        .addComponent(btnAChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                        .addComponent(btnALogout, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAInformationLayout.createSequentialGroup()
                        .addGroup(pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelAUsername)
                            .addComponent(labelAID))
                        .addGap(35, 35, 35)
                        .addGroup(pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbAlUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlAInformationLayout.createSequentialGroup()
                        .addComponent(labelADepartment)
                        .addGap(26, 26, 26)
                        .addComponent(lblADepartment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlAInformationLayout.createSequentialGroup()
                        .addComponent(labelAFirstName)
                        .addGap(34, 34, 34)
                        .addComponent(lblAFirstname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlAInformationLayout.createSequentialGroup()
                        .addComponent(labelALastName)
                        .addGap(34, 34, 34)
                        .addComponent(lblALastname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlAInformationLayout.setVerticalGroup(
            pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAID)
                    .addComponent(lblAID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAUsername)
                    .addComponent(lbAlUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAFirstName)
                    .addComponent(lblAFirstname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelALastName)
                    .addComponent(lblALastname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelADepartment)
                    .addComponent(lblADepartment))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(pnlAInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnALogout, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlAccountLayout = new javax.swing.GroupLayout(pnlAccount);
        pnlAccount.setLayout(pnlAccountLayout);
        pnlAccountLayout.setHorizontalGroup(
            pnlAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAccountLayout.createSequentialGroup()
                .addGroup(pnlAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAccountLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblRAMRoomManagement1))
                    .addGroup(pnlAccountLayout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(pnlAInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAccountLayout.setVerticalGroup(
            pnlAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRAMRoomManagement1)
                .addGap(95, 95, 95)
                .addComponent(pnlAInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(229, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlTabRightLayout = new javax.swing.GroupLayout(pnlTabRight);
        pnlTabRight.setLayout(pnlTabRightLayout);
        pnlTabRightLayout.setHorizontalGroup(
            pnlTabRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabRightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlHome, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlTabRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTabRightLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlRoomManagement, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pnlTabRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTabRightLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlMembers, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pnlTabRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTabRightLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 1067, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlTabRightLayout.setVerticalGroup(
            pnlTabRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabRightLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(pnlHome, javax.swing.GroupLayout.PREFERRED_SIZE, 611, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlTabRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTabRightLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlRoomManagement, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pnlTabRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTabRightLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlMembers, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(pnlTabRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlTabRightLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTabLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTabTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlTabRight, javax.swing.GroupLayout.DEFAULT_SIZE, 1079, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTabTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlTabRight, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(pnlTabLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void pnlTabHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTabHomeMouseClicked
        HomeTab();
    }//GEN-LAST:event_pnlTabHomeMouseClicked

    private void pnlTabRoomManagementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTabRoomManagementMouseClicked
        RoomManagementTab();
    }//GEN-LAST:event_pnlTabRoomManagementMouseClicked

    private void pnlTabMembersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTabMembersMouseClicked
        MemberTab();
    }//GEN-LAST:event_pnlTabMembersMouseClicked

    private void pnlTabAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTabAccountMouseClicked
        AccountTab();
    }//GEN-LAST:event_pnlTabAccountMouseClicked

    private void btnRAMSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRAMSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRAMSaveActionPerformed

    private void btnRAMAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRAMAddActionPerformed
        if (txtRAMRoom.getText().trim().isEmpty() || txtRAMSubject.getText().trim().isEmpty() || txtRAMSection.getText().trim().isEmpty() || cbRAMTeacher.getSelectedItem().toString().trim().isEmpty() || txtRAMStartTime.getText().trim().isEmpty() || txtRAMEndTime.getText().trim().isEmpty()) {
            lblRAMError.setText("All fields must be filled!");
            clearErrorMessageRAM();
        } else if (roomValidation.isRoomInputValid(txtRAMRoom.getText().trim()) == false) {
            lblRAMError.setText("Room field must only contain letters and numbers!");
            clearErrorMessageRAM();
        } else if (roomValidation.isSubjectInputValid(txtRAMSubject.getText().trim()) == false) {
            lblRAMError.setText("Subject field must only contain letters and numbers!");
            clearErrorMessageRAM();
        } else if (roomValidation.isSectionInputValid(txtRAMSection.getText().trim()) == false) {
            lblRAMError.setText("Section field must only contain uppercase letters and numbers!");
            clearErrorMessageRAM();
        } else {
            insertRoomJTable(txtRAMRoom.getText().trim(), txtRAMSubject.getText().trim(), txtRAMSection.getText().trim(), cbRAMTeacher.getSelectedItem().toString().trim(), cbRAMDayOfTheWeek.getSelectedItem().toString().trim(), tpRAMStartTime.getSelectedTime(), tpRAMEndTime.getSelectedTime());
            populateRoomJTable();
        }
    }//GEN-LAST:event_btnRAMAddActionPerformed

    private void btnRAMStartTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRAMStartTimeActionPerformed
        tpRAMStartTime.showPopup(this, 100, 100);
    }//GEN-LAST:event_btnRAMStartTimeActionPerformed

    private void txtRAMStartTimeInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtRAMStartTimeInputMethodTextChanged

    }//GEN-LAST:event_txtRAMStartTimeInputMethodTextChanged

    private void btnRAMEndTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRAMEndTimeActionPerformed
        tpRAMEndTime.showPopup(this, 100, 100);
    }//GEN-LAST:event_btnRAMEndTimeActionPerformed

    private void btnRAMDeleteRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRAMDeleteRoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRAMDeleteRoomActionPerformed

    private void btnMUserSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMUserSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMUserSaveActionPerformed

    private void btnMUserAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMUserAddActionPerformed
        if (txtMUserUsername.getText().trim().isEmpty() || new String(pfMUserPassword.getPassword()).trim().isEmpty() || txtMUserDepartment.getText().trim().isEmpty() || txtMUserFirstName.getText().trim().isEmpty() || txtMUserLastName.getText().trim().isEmpty() || txtMUserMiddleName.getText().trim().isEmpty() || txtMUserEmail.getText().trim().isEmpty() || txtMUserContactNo.getText().trim().isEmpty() || txtMUserAddress.getText().trim().isEmpty()) {
            lblMUserError.setText("All fields must me filled!");
            clearErrorMessageMembers();
        } else if (userValidation.isUsernameExisting(txtMUserUsername.getText().trim()) == true) {
            lblMUserError.setText("Username already exists!");
            clearErrorMessageMembers();
        } else if (userValidation.isDepartmentInputValid(txtMUserDepartment.getText().trim()) == false) {
            lblMUserError.setText("Department field must only contain letters with no spaces in between letters!");
            clearErrorMessageMembers();
        } else if (userValidation.isNameInputValid(txtMUserFirstName.getText().trim(), txtMUserLastName.getText().trim(), txtMUserMiddleName.getText().trim()) == false) {
            lblMUserError.setText("Name fields must only contain letters with only one spacing between letters!");
            clearErrorMessageMembers();
        } else if (userValidation.isNameExisting(txtMUserFirstName.getText().trim(), txtMUserLastName.getText().trim(), txtMUserMiddleName.getText().trim()) == true) {
            lblMUserError.setText("Name already exists!");
            clearErrorMessageMembers();
        } else if (userValidation.isEmailInputValid(txtMUserEmail.getText().trim()) == false) {
            lblMUserError.setText("Invalid email format!");
            clearErrorMessageMembers();
        } else if (userValidation.isEmailExisting(txtMUserEmail.getText().trim()) == true) {
            lblMUserError.setText("Email already exists!");
            clearErrorMessageMembers();
        } else if (userValidation.isContactNoInputValid(txtMUserContactNo.getText().trim()) == false) {
            lblMUserError.setText("Contact no. field must only contain numbers and must have 11 digits exact!");
            clearErrorMessageMembers();
        } else if (userValidation.isContactNoExisting(txtMUserContactNo.getText().trim()) == true) {
            lblMUserError.setText("Contact No. already exists!");
            clearErrorMessageMembers();
        } else {
            insertUserJTable(txtMUserUsername.getText().trim(), new String(pfMUserPassword.getPassword()).trim(), txtMUserDepartment.getText().trim(), cbMUserRole.getSelectedItem().toString().trim(), txtMUserFirstName.getText().trim(), txtMUserLastName.getText().trim(), txtMUserMiddleName.getText().trim(), txtMUserEmail.getText().trim(), txtMUserContactNo.getText().trim(), txtMUserAddress.getText().trim());
            populateUserJTable();
            populateTeacherJComboBox();
        }
    }//GEN-LAST:event_btnMUserAddActionPerformed

    private void cbMUserShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMUserShowPasswordActionPerformed
        if (cbMUserShowPassword.isSelected()) {
            pfMUserPassword.setEchoChar((char) 0);
        } else {
            pfMUserPassword.setEchoChar('*');
        }
    }//GEN-LAST:event_cbMUserShowPasswordActionPerformed

    private void btnALogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnALogoutActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnALogoutActionPerformed

    private void btnMUserDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMUserDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMUserDeleteActionPerformed

    private void btnAChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAChangePasswordActionPerformed
        Change_Password cp = new Change_Password();
        cp.show();
        cp.setAlwaysOnTop(true);
    }//GEN-LAST:event_btnAChangePasswordActionPerformed

    private void btnMUserEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMUserEditActionPerformed
        MEdit();
    }//GEN-LAST:event_btnMUserEditActionPerformed

    private void btnRAMEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRAMEditActionPerformed
        RAMEdit();
    }//GEN-LAST:event_btnRAMEditActionPerformed

    private void btnMUserSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMUserSearchActionPerformed
        if (txtMUserSearch.getText().trim().isEmpty()) {
            lblMUserError.setText("Field for searching must not be blank!");
            clearErrorMessageMembers();
        } else if (userValidation.isUserIDInputValid(txtMUserSearch.getText().trim()) == false) {
            lblMUserError.setText("Field for searching must only contain numbers!");
            clearErrorMessageMembers();
        } else {
            searchUserJTable(Integer.parseInt(txtMUserSearch.getText().trim()));
        }
    }//GEN-LAST:event_btnMUserSearchActionPerformed

    private void btnRAMSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRAMSearchActionPerformed
        if (txtRAMSearch.getText().trim().isEmpty()) {
            lblRAMError.setText("Field for searching must not be blank!");
            clearErrorMessageRAM();
        } else if (roomValidation.isScheduleIDInputValid(txtRAMSearch.getText().trim()) == false) {
            lblRAMError.setText("Field for searching must only contain numbers!");
            clearErrorMessageRAM();
        } else {
            searchRoomJTable(Integer.parseInt(txtRAMSearch.getText().trim()));
        }
    }//GEN-LAST:event_btnRAMSearchActionPerformed

    private void txtMUserMiddleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMUserMiddleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMUserMiddleNameActionPerformed

    private void btnRAMViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRAMViewAllActionPerformed
        populateRoomJTable();
    }//GEN-LAST:event_btnRAMViewAllActionPerformed

    private void btnMUserViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMUserViewAllActionPerformed
        populateUserJTable();
    }//GEN-LAST:event_btnMUserViewAllActionPerformed

    private void lblMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseClicked
        setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_lblMinimizeMouseClicked

    private void pnlTabTopMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTabTopMouseDragged
        this.setLocation(this.getX() + evt.getX() - mouseX, this.getY() + evt.getY() - mouseY);
    }//GEN-LAST:event_pnlTabTopMouseDragged

    private void pnlTabTopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlTabTopMousePressed
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_pnlTabTopMousePressed
    private void txtRAMRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRAMRoomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRAMRoomActionPerformed

    private void txtMUserSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMUserSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMUserSearchActionPerformed

    private void txtRAMSearchActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    // Clears error message after 3 seconds in members panel
    private void clearErrorMessageMembers() {
        clearErrorTimer = new Timer(3000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                lblMUserError.setText("");
                clearErrorTimer.stop();
            }
        });
        clearErrorTimer.setRepeats(false);
        clearErrorTimer.start();
    }

    // Clears error message after 3 seconds in RAM panel
    private void clearErrorMessageRAM() {
        clearErrorTimer = new Timer(3000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                lblRAMError.setText("");
                clearErrorTimer.stop();
            }
        });
        clearErrorTimer.setRepeats(false);
        clearErrorTimer.start();
    }

    // Displays all records of users within the database
    private void populateUserJTable() {
        try {
            tblData = userData.getAllUserAccountsInformation();
            tblModel = (DefaultTableModel) tblMHead.getModel();
            tblModel.setRowCount(0);// Resets the JTable Contents
            while (tblData.next()) {
                tblRowData = new Vector<Object>();
                for (int columnNumber = 1; columnNumber < 12; columnNumber++) {
                    if (columnNumber == 1) {
                        tblRowData.add(tblData.getInt(columnNumber));//User ID data  
                        continue;
                    }
                    tblRowData.add(tblData.getString(columnNumber));//Rest of the column of strings data type data
                }
                tblModel.addRow(tblRowData);
            }
        } catch (SQLException sqlex) {
            JOptionPane.showMessageDialog(null, sqlex.toString(), "SQL Query Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Searches User Accounts table via User ID
    private void searchUserJTable(int userID) {
        try {
            tblData = userData.getUserAccountInformation(userID);
            tblModel = (DefaultTableModel) tblMHead.getModel();
            tblModel.setRowCount(0);// Resets the JTable Contents
            while (tblData.next()) {
                tblRowData = new Vector<Object>();
                for (int columnNumber = 1; columnNumber < 12; columnNumber++) {
                    if (columnNumber == 1) {
                        tblRowData.add(tblData.getInt(columnNumber));//User ID data  
                        continue;
                    }
                    tblRowData.add(tblData.getString(columnNumber));//Rest of the column of strings data type data
                }
                tblModel.addRow(tblRowData);
            }
        } catch (SQLException sqlex) {
            JOptionPane.showMessageDialog(null, sqlex.toString(), "SQL Query Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Adds new row data into User Table
    private void insertUserJTable(String username, String password, String department, String role, String firstName, String lastName, String middleName, String email, String contactNo, String address) {
        userData.insertUserAccountInformation(username, password, department, role, firstName, lastName, middleName, email, contactNo, address);
    }
    // Displays all records of schedules within the database

    private void populateRoomJTable() {
        try {
            tblData = roomData.getAllRoomSchedulesInformation();
            tblModel = (DefaultTableModel) tblRAMShowRoom.getModel();
            tblModel.setRowCount(0);// Resets the JTable Contents
            while (tblData.next()) {
                tblRowData = new Vector<Object>();
                for (int columnNumber = 1; columnNumber < 9; columnNumber++) {
                    if (columnNumber == 1) {
                        tblRowData.add(tblData.getInt(columnNumber));//Schedule ID data  
                        continue;
                    }
                    tblRowData.add(tblData.getString(columnNumber));//Rest of the column of strings data type data
                }
                tblModel.addRow(tblRowData);
            }
        } catch (SQLException sqlex) {
            JOptionPane.showMessageDialog(null, sqlex.toString(), "SQL Query Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Sets all of the existing teachers from the account table
    private void populateTeacherJComboBox() {
        cbRAMTeacher.removeAllItems();
        try {
            tblData = userData.getAllTeacherAccountsInformation();
            while(tblData.next()) {
                cbRAMTeacher.addItem(tblData.getString(7) + ", " + tblData.getString(6) + " " + tblData.getString(8));
            }
        } catch (SQLException sqlex) {
            JOptionPane.showMessageDialog(null, sqlex.toString(), "SQL Query Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Searches Room Schedules table via Schedule ID
    private void searchRoomJTable(int scheduleID) {
        try {
            tblData = roomData.getRoomScheduleInformation(scheduleID);
            tblModel = (DefaultTableModel) tblRAMShowRoom.getModel();
            tblModel.setRowCount(0);// Resets the JTable Contents
            while (tblData.next()) {
                tblRowData = new Vector<Object>();
                for (int columnNumber = 1; columnNumber < 9; columnNumber++) {
                    if (columnNumber == 1) {
                        tblRowData.add(tblData.getInt(columnNumber));//Schedule ID data  
                        continue;
                    }
                    tblRowData.add(tblData.getString(columnNumber));//Rest of the column of strings data type data
                }
                tblModel.addRow(tblRowData);
            }
        } catch (SQLException sqlex) {
            JOptionPane.showMessageDialog(null, sqlex.toString(), "SQL Query Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Adds new row data into Room Schedules table
    private void insertRoomJTable(String room, String subject, String section, String teacher, String dayOfTheWeek, String startTime, String endTime) {
        try {
            SimpleDateFormat sdf12 = new SimpleDateFormat("hh:mm aa");// Takes the time text to convert into date 12 hour format with am/pm
            SimpleDateFormat sdf24 = new SimpleDateFormat("HH:mm");// Takes date 12 hour format with am/pm to convert into 24 hour format
            Date convertedStartTime = sdf12.parse(startTime);
            Date convertedEndTime = sdf12.parse(endTime);
            roomData.insertRoomScheduleInformation(room, subject, section, teacher, dayOfTheWeek, sdf24.format(convertedStartTime), sdf24.format(convertedEndTime));
        } catch (ParseException peex) {
            JOptionPane.showMessageDialog(null, peex.toString(), "Date Parse Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void DefaultTab() {
        pnlHome.setVisible(true);
        pnlRoomManagement.setVisible(false);
        pnlMembers.setVisible(false);
        pnlAccount.setVisible(false);

        pnlTabHome.setBackground(new Color(247, 246, 220));
        pnlTabRoomManagement.setBackground(new Color(218, 104, 70));
        pnlTabMembers.setBackground(new Color(218, 104, 70));
        pnlTabAccount.setBackground(new Color(218, 104, 70));
    }

    public void HomeTab() {
        pnlHome.setVisible(true);
        pnlRoomManagement.setVisible(false);
        pnlMembers.setVisible(false);
        pnlAccount.setVisible(false);

        pnlTabHome.setBackground(new Color(247, 246, 220));
        pnlTabRoomManagement.setBackground(new Color(218, 104, 70));
        pnlTabMembers.setBackground(new Color(218, 104, 70));
        pnlTabAccount.setBackground(new Color(218, 104, 70));
    }

    public void RoomManagementTab() {
        pnlRoomManagement.setVisible(true);
        pnlHome.setVisible(false);
        pnlMembers.setVisible(false);
        pnlAccount.setVisible(false);

        pnlTabRoomManagement.setBackground(new Color(247, 246, 220));
        pnlTabHome.setBackground(new Color(218, 104, 70));
        pnlTabMembers.setBackground(new Color(218, 104, 70));
        pnlTabAccount.setBackground(new Color(218, 104, 70));

        boolean ID = txtMUserID.isEnabled();

        if (ID == true) {
            MEdit();
        }
    }

    public void MemberTab() {
        pnlMembers.setVisible(true);
        pnlHome.setVisible(false);
        pnlRoomManagement.setVisible(false);
        pnlAccount.setVisible(false);
        pnlMViewUser.setVisible(true);

        pnlTabMembers.setBackground(new Color(247, 246, 220));
        pnlTabHome.setBackground(new Color(218, 104, 70));
        pnlTabRoomManagement.setBackground(new Color(218, 104, 70));
        pnlTabAccount.setBackground(new Color(218, 104, 70));

        boolean ID = txtRAMID.isEnabled();

        if (ID == true) {
            RAMEdit();
        }
    }

    public void AccountTab() {
        pnlAccount.setVisible(true);
        pnlHome.setVisible(false);
        pnlRoomManagement.setVisible(false);
        pnlMembers.setVisible(false);

        pnlTabAccount.setBackground(new Color(247, 246, 220));
        pnlTabHome.setBackground(new Color(218, 104, 70));
        pnlTabRoomManagement.setBackground(new Color(218, 104, 70));
        pnlTabMembers.setBackground(new Color(218, 104, 70));
    }

    public void RAMEdit() {
        boolean ID = txtRAMID.isEnabled();

        Icon unlock = new ImageIcon("C:\\Users\\solve\\Documents\\NetBeansProjects\\RoomAssignmentManagementSystem\\src\\RoomAssignment\\image\\unlock.png");
        Icon lock = new ImageIcon("C:\\Users\\solve\\Documents\\NetBeansProjects\\RoomAssignmentManagementSystem\\src\\RoomAssignment\\image\\lock.png");

        if (ID == false) {
            btnRAMEdit.setIcon(unlock);
            btnRAMEdit.setBackground(new Color(153, 153, 153));
            txtRAMID.setEnabled(true);
            txtRAMRoom.setEnabled(true);
            txtRAMSubject.setEnabled(true);
            txtRAMSection.setEnabled(true);
            cbRAMTeacher.setEnabled(true);
            cbRAMDayOfTheWeek.setEnabled(true);
            cbRAMDayOfTheWeek.setEnabled(true);
            txtRAMStartTime.setEnabled(true);
            txtRAMEndTime.setEnabled(true);
            btnRAMStartTime.setEnabled(true);
            btnRAMEndTime.setEnabled(true);
        } else if (ID == true) {
            btnRAMEdit.setIcon(lock);
            btnRAMEdit.setBackground(new Color(218, 104, 70));
            txtRAMID.setEnabled(false);
            txtRAMRoom.setEnabled(false);
            txtRAMSubject.setEnabled(false);
            txtRAMSection.setEnabled(false);
            cbRAMTeacher.setEnabled(false);
            cbRAMDayOfTheWeek.setEnabled(false);
            cbRAMDayOfTheWeek.setEnabled(false);
            txtRAMStartTime.setEnabled(false);
            txtRAMEndTime.setEnabled(false);
            btnRAMStartTime.setEnabled(false);
            btnRAMEndTime.setEnabled(false);
        }

    }

    public void MEdit() {
        boolean userID = txtMUserID.isEnabled();

        Icon unlock = new ImageIcon("C:\\Users\\solve\\Documents\\NetBeansProjects\\RoomAssignmentManagementSystem\\src\\RoomAssignment\\image\\unlock.png");
        Icon lock = new ImageIcon("C:\\Users\\solve\\Documents\\NetBeansProjects\\RoomAssignmentManagementSystem\\src\\RoomAssignment\\image\\lock.png");

        if (userID == false) {
            btnMUserEdit.setIcon(unlock);
            btnMUserEdit.setBackground(new Color(153, 153, 153));
            txtMUserAddress.setEnabled(true);
            txtMUserContactNo.setEnabled(true);
            txtMUserDepartment.setEnabled(true);
            txtMUserEmail.setEnabled(true);
            txtMUserFirstName.setEnabled(true);
            txtMUserID.setEnabled(true);
            txtMUserLastName.setEnabled(true);
            txtMUserMiddleName.setEnabled(true);
            txtMUserUsername.setEnabled(true);
            cbMUserRole.setEnabled(true);
            cbMUserRole.setEnabled(true);
            pfMUserPassword.setEnabled(true);
        } else if (userID == true) {
            btnMUserEdit.setIcon(lock);
            btnMUserEdit.setBackground(new Color(218, 104, 70));
            txtMUserAddress.setEnabled(false);
            txtMUserContactNo.setEnabled(false);
            txtMUserDepartment.setEnabled(false);
            txtMUserEmail.setEnabled(false);
            txtMUserFirstName.setEnabled(false);
            txtMUserID.setEnabled(false);
            txtMUserLastName.setEnabled(false);
            txtMUserMiddleName.setEnabled(false);
            txtMUserUsername.setEnabled(false);
            cbMUserRole.setEnabled(false);
            cbMUserRole.setEnabled(false);
            pfMUserPassword.setEnabled(false);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAChangePassword;
    private javax.swing.JButton btnALogout;
    private javax.swing.JButton btnMUserAdd;
    private javax.swing.JButton btnMUserDelete;
    private javax.swing.JButton btnMUserEdit;
    private javax.swing.JButton btnMUserSave;
    private javax.swing.JButton btnMUserSearch;
    private javax.swing.JButton btnMUserViewAll;
    private javax.swing.JButton btnRAMAdd;
    private javax.swing.JButton btnRAMDeleteRoom;
    private javax.swing.JButton btnRAMEdit;
    private javax.swing.JButton btnRAMEndTime;
    private javax.swing.JButton btnRAMSave;
    private javax.swing.JButton btnRAMSearch;
    private javax.swing.JButton btnRAMStartTime;
    private javax.swing.JButton btnRAMViewAll;
    private javax.swing.JComboBox<String> cbMUserRole;
    private javax.swing.JCheckBox cbMUserShowPassword;
    private javax.swing.JComboBox<String> cbRAMDayOfTheWeek;
    private javax.swing.JComboBox<String> cbRAMTeacher;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelADepartment;
    private javax.swing.JLabel labelAFirstName;
    private javax.swing.JLabel labelAID;
    private javax.swing.JLabel labelALastName;
    private javax.swing.JLabel labelAUsername;
    private javax.swing.JLabel lbAlUsername;
    private javax.swing.JLabel lblADepartment;
    private javax.swing.JLabel lblAFirstname;
    private javax.swing.JLabel lblAID;
    private javax.swing.JLabel lblALastname;
    private javax.swing.JLabel lblHome;
    private javax.swing.JLabel lblHomeAccountNumber;
    private javax.swing.JLabel lblHomeCreatedAccount;
    private javax.swing.JLabel lblHomeCreatedSchedule;
    private javax.swing.JLabel lblHomeFaculties;
    private javax.swing.JLabel lblHomeFacultiesNumber;
    private javax.swing.JLabel lblHomeScheduleNumber;
    private javax.swing.JLabel lblImageOnTop;
    private javax.swing.JLabel lblMMember;
    private javax.swing.JLabel lblMUserAddress;
    private javax.swing.JLabel lblMUserContactNo;
    private javax.swing.JLabel lblMUserDepartment;
    private javax.swing.JLabel lblMUserEmail;
    private javax.swing.JLabel lblMUserError;
    private javax.swing.JLabel lblMUserFirstName;
    private javax.swing.JLabel lblMUserID;
    private javax.swing.JLabel lblMUserLastName;
    private javax.swing.JLabel lblMUserMiddleName;
    private javax.swing.JLabel lblMUserPassword;
    private javax.swing.JLabel lblMUserRole;
    private javax.swing.JLabel lblMUserUsername;
    private javax.swing.JLabel lblMinimize;
    private javax.swing.JLabel lblRAMDayOfTheWeek;
    private javax.swing.JLabel lblRAMEndTime;
    private javax.swing.JLabel lblRAMError;
    private javax.swing.JLabel lblRAMID;
    private javax.swing.JLabel lblRAMRoom;
    private javax.swing.JLabel lblRAMRoomManagement;
    private javax.swing.JLabel lblRAMRoomManagement1;
    private javax.swing.JLabel lblRAMSection;
    private javax.swing.JLabel lblRAMStartTime;
    private javax.swing.JLabel lblRAMSubject;
    private javax.swing.JLabel lblRAMTeacher;
    private javax.swing.JLabel lblRoomMangementSystem;
    private javax.swing.JLabel lblTabAccount;
    private javax.swing.JLabel lblTabMembers;
    private javax.swing.JLabel lblTabRoomManagement;
    private javax.swing.JList<String> listActivityLog;
    private javax.swing.JPasswordField pfMUserPassword;
    private javax.swing.JPanel pnlAInformation;
    private javax.swing.JPanel pnlAccount;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlHomeActivityLog;
    private javax.swing.JPanel pnlHomeCreatedAccount;
    private javax.swing.JPanel pnlHomeCreatedSchedule;
    private javax.swing.JPanel pnlHomeFacultiesStudents;
    private javax.swing.JPanel pnlMViewUser;
    private javax.swing.JPanel pnlMembers;
    private javax.swing.JPanel pnlRAMSchedule;
    private javax.swing.JPanel pnlRoomManagement;
    private javax.swing.JPanel pnlTabAccount;
    private javax.swing.JPanel pnlTabHome;
    private javax.swing.JPanel pnlTabLeft;
    private javax.swing.JPanel pnlTabMembers;
    private javax.swing.JPanel pnlTabRight;
    private javax.swing.JPanel pnlTabRoomManagement;
    private javax.swing.JPanel pnlTabTop;
    private javax.swing.JScrollPane spActivityLog;
    private javax.swing.JScrollPane spMUser;
    private javax.swing.JScrollPane spRAMShowRoom;
    private javax.swing.JTable tblMHead;
    private javax.swing.JTable tblRAMShowRoom;
    private com.raven.swing.TimePicker tpRAMEndTime;
    private com.raven.swing.TimePicker tpRAMStartTime;
    private javax.swing.JTextArea txtMUserAddress;
    private javax.swing.JTextField txtMUserContactNo;
    private javax.swing.JTextField txtMUserDepartment;
    private javax.swing.JTextField txtMUserEmail;
    private javax.swing.JTextField txtMUserFirstName;
    private javax.swing.JTextField txtMUserID;
    private javax.swing.JTextField txtMUserLastName;
    private javax.swing.JTextField txtMUserMiddleName;
    private javax.swing.JTextField txtMUserSearch;
    private javax.swing.JTextField txtMUserUsername;
    private javax.swing.JTextField txtRAMEndTime;
    private javax.swing.JTextField txtRAMID;
    private javax.swing.JTextField txtRAMRoom;
    private javax.swing.JTextField txtRAMSearch;
    private javax.swing.JTextField txtRAMSection;
    private javax.swing.JTextField txtRAMStartTime;
    private javax.swing.JTextField txtRAMSubject;
    // End of variables declaration//GEN-END:variables
}
